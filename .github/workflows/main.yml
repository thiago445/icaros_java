# Nome do workflow que aparecerá na aba "Actions" do GitHub
name: Build and Push Java App to ACR

# Gatilho: Roda a cada 'push' na branch 'main' e permite execução manual
on:
  push:
    branches: ["main"]
  workflow_dispatch:

# Variáveis de ambiente para facilitar a configuração
env:
  # 1. SUBSTITUA PELO NOME DO SEU REGISTRY CRIADO NO AZURE
  ACR_REGISTRY_NAME: icaros-app-java

  # 2. ESCOLHA UM NOME PARA A IMAGEM DA SUA API
  APP_IMAGE_NAME: icaros-api

jobs:
  build-and-push-to-acr:
    runs-on: ubuntu-latest

    steps:
      # Baixa o código do seu repositório para a máquina virtual
      - name: 'Check out repository code'
        uses: actions/checkout@v4

      # Faz o login no seu Azure Container Registry (ACR)
      - name: 'Log in to Azure Container Registry'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_REGISTRY_NAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # Constrói a imagem Docker e a envia para o seu ACR
      - name: 'Build and push Docker image to ACR'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.ACR_NAME }}.azurecr.io/${{ env.APP_IMAGE_NAME }}:latest